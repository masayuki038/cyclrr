{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/content-detail/content-detail.component.css","webpack:///./src/app/content-detail/content-detail.component.html","webpack:///./src/app/content-detail/content-detail.component.ts","webpack:///./src/app/content-list/content-list.component.css","webpack:///./src/app/content-list/content-list.component.html","webpack:///./src/app/content-list/content-list.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Content } from './content';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MessageService } from './message.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  API_URL: string = \"\";\n  constructor(\n    private http: HttpClient, \n    private messageService: MessageService) { }\n\n  public getContents(): Observable<Content[]> {\n    var endpoint = this.API_URL + \"contents\";\n    return this.http.get<Content[]>(endpoint)\n      .pipe(\n        tap(_ => this.log('fetched contents')),\n\tcatchError(this.handleError('get', [])));\n  }\n\n  public getContent(id: number): Observable<Content> {\n    var endpoint = this.API_URL + \"contents/\" + id;\n    return this.http.get<Content>(endpoint)\n      .pipe(\n        tap(_ => this.log('fetched content')),\n\tcatchError(this.handleError('getContent', null)));\n  }\n\n  readCookie(name: string): string {\n    var nameEq = name + \"=\";\n    var ca = document.cookie.split(\";\");\n    console.log(\"document.cookie: \" + document.cookie);\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      console.log(c);\n      while (c.charAt(0) === \" \") c = c.substring(1, c.length);\n      if (c.indexOf(nameEq) === 0) return c.substring(nameEq.length, c.length);\n    }\n    return null;\n  }\n\n  updateContent(content: Content): Observable<any> {\n    return this.http.put(this.API_URL + \"contents/\" + content.id, content)\n      .pipe(\n        tap(_ => this.log(`updated content id:${content.id}`)),\n        catchError(this.handleError<any>('updateContent')));\n  }\n\t  \n  private log(message: string) {\n    this.messageService.add(`ApiService: ${message}`);\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContentListComponent } from './content-list/content-list.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ContentDetailComponent } from './content-detail/content-detail.component';\n\nconst routes: Routes = [{\n    path: 'contents',\n    component: ContentListComponent\n  }, { \n    path: 'dashboard',\n    component: DashboardComponent\n  }, {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full'\n  }, {\n    path: 'detail/:id',\n    component: ContentDetailComponent\n  }   \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<h1>\\n  Welcome to {{ title }}!\\n</h1>\\n<nav>\\n  <a mat-raised-button routerLink=\\\"/dashboard\\\">Dashboard</a>\\n  <a mat-raised-button routerLink=\\\"/contents\\\">Contents</a>\\n</nav>\\n<router-outlet></router-outlet>\\n<app-messages></app-messages>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cyclrr';\n}\n","import { NgModule } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '../../node_modules/@angular/common/http';\nimport { HttpClientXsrfModule } from '../../node_modules/@angular/common/http';\nimport { ContentListComponent } from './content-list/content-list.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ContentDetailComponent } from './content-detail/content-detail.component';\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\n\n@NgModule({\n  declarations: [ \n    ContentListComponent,\n    AppComponent,\n    MessagesComponent,\n    DashboardComponent,\n    ContentDetailComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'X_CSRF_Token',\n      headerName: 'X-CSRF-Token'\n    })\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtZGV0YWlsL2NvbnRlbnQtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"content\\\">\\n  <h2>{{content.title | uppercase}}</h2>\\n  <div>\\n    <label>Title: \\n      <input [(ngModel)]=\\\"content.title\\\" placeholder=\\\"title\\\"/>\\n    </label>\\n  <div>\\n    <label>Content:\\n      <textarea [(ngModel)]=\\\"content.content\\\" cols=\\\"100\\\" rows=\\\"20\\\" placeholder=\\\"content\\\"></textarea>\\n    </label>\\n  </div>\\n  <button (click)=\\\"goBack()\\\">go back</button>\\n  <button (click)=\\\"save()\\\">save</button>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ApiService } from '../api.service';\nimport { Content } from '../content';\n\n@Component({\n  selector: 'app-content-detail',\n  templateUrl: './content-detail.component.html',\n  styleUrls: ['./content-detail.component.css']\n})\nexport class ContentDetailComponent implements OnInit {\n  public content: Content;\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private location: Location\n  ) {}\n\n  ngOnInit() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    console.log(\"id: \" + id);\n    this.apiService.getContent(id).subscribe((content) => {\n      this.content = content;\n    });\n  }\n\n  goBack(): void {\n    this.location.back();\n  } \n\n  save(): void {\n    this.apiService.updateContent(this.content)\n      .subscribe(() => this.goBack());\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtbGlzdC9jb250ZW50LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2>Contents</h2>\\n<ul class=\\\"contents\\\">\\n  <li *ngFor=\\\"let content of rows\\\">\\n    <a routerLink=\\\"/detail/{{content.id}}\\\">\\n      <span class=\\\"badge\\\">{{content.title}}</span>\\n    </a>\\n  </li>\\n</ul>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Content } from '../content';\n\n@Component({\n  selector: 'app-content-list',\n  templateUrl: './content-list.component.html',\n  styleUrls: ['./content-list.component.css']\n})\nexport class ContentListComponent implements OnInit {\n\n  public columns = ['id', 'name'];\n  public rows: Content[];\n\n  constructor(public apiService: ApiService) { }\n\n  ngOnInit() {\n    this.apiService.getContents().subscribe((contents) => {\n      console.log(contents);\n      this.rows = contents;\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h3>Top Contents</h3>\\n<div class=\\\"grid grid-pad\\\">\\n    <a *ngFor=\\\"let content of contents\\\" class=\\\"col-1-4\\\" routerLink=\\\"/detail/{{content.id}}\\\">\\n    <div class=\\\"module content\\\">\\n      <h4>{{content.title}}</h4>\\n    </div>\\n  </a>\\n</div>\\n\\t\\t    \\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Content } from '../content';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  contents: object[] = [];\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.getContents();\n  }\n\n  getContents(): void {\n    this.apiService.getContents()\n      .subscribe(contents => this.contents = contents.slice(1, 5));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: string[] = [];\n  \n  constructor() { }\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\" (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}